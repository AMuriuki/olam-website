---
# tasks file for nginx
- name: Disable Default Site Configuration
  become: yes
  file:
    dest: /etc/nginx/sites-enabled/default
    state: absent

- name: Create Letsencrypt Directory
  become: yes
  file:
    name: "{{letsencrypt_directory}}"
    state: directory

- name: open firewall for nginx
  become: yes
  ufw:
    rule: allow
    name: Nginx Full

- name: Check If Exists
  become: yes
  stat:
    path: /etc/nginx/sites-enabled/{{ app_name }}.conf

- name: Install nginx site for letsencrypt requests
  become: yes
  template:
    src: olam-erp.conf.j2
    dest: /etc/nginx/sites-enabled/{{ app_name }}.conf
    owner: root
    group: root

# - name: Ensure that the directory exists
#   file:
#     path: "/etc/nginx/sites-enabled"
#     state: directory
#     owner: root
#     group: root

# - name: Enable Nginx Site Config
#   become: yes
#   file:
#     src: "/etc/nginx/sites-available/{{ app_name }}.conf"
#     dest: "/etc/nginx/sites-enabled/{{ app_name }}.conf"
#     state: link
#     force: yes

- name: Reload nginx to activate letsencrypt site
  become: yes
  service:
    name: nginx
    state: restarted

- name: Create letsencrypt certificate
  become: yes
  # shell: certbot --nginx -m {{letsencrypt_email}} --redirect --agree-tos -d {{domain}} -d {{alt_domain}}
  shell: certbot --nginx -m {{letsencrypt_email}} --redirect --agree-tos -d {{app_name}}.{{domain}} --reinstall
  args:
    # creates: /etc/letsencrypt/live/{{domain}}
    creates: /etc/letsencrypt/live/{{app_name}}.{{domain}}

- name: Add letsencrypt cronjob for cert renewal
  become: yes
  cron:
    name: letsencrypt_renewal
    special_time: weekly
    # job: certbot --nginx -m {{letsencrypt_email}} --redirect --agree-tos -d {{domain}} -d {{alt_domain}} && service nginx reload
    job: certbot --nginx -m {{letsencrypt_email}} --redirect --agree-tos -d {{app_name}}.{{domain}}0 && service nginx reload
